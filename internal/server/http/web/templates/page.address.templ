package templates

import (
	"github.com/jpcummins/satwatch/internal/api"
	"fmt"
	"github.com/jpcummins/go-electrum/electrum"
	"time"
)

templ PageAddressNotFound() {
	@AuthLayout("sat.watch - Address") {
		<div class="flex items-baseline justify-between mb-8">
			<h2 class="mt-8 mb-2 text-xl font-semibold leading-none text-gray-900 md:text-2xl dark:text-white">Address not found</h2>
		</div>
	}
}

func getConfirmedUTXOs(unspent []*electrum.ListUnspentResult) int {
	unconfirmed := 0
	for _, v := range unspent {
		if v.Height != 0 {
			unconfirmed = unconfirmed + 1
		}
	}
	return unconfirmed
}

func btcToSats(btc float64) int {
	return int(btc * 100000000)
}

func humanTime(unix uint64) string {
	t := time.Unix(int64(unix), 0)
	return t.Local().Format(time.RFC850)
}

func getBlockString(tx *electrum.GetMempoolResult) string {
	if tx.Height == -1 {
		return "In mempool, unconfirmed inputs"
	}

	if tx.Height == 0 {
		return "In mempool"
	}

	return fmt.Sprintf("Block %d", tx.Height)
}

templ PageAddress(address api.Address, unspent []*electrum.ListUnspentResult, balances electrum.GetBalanceResult, txHistory []*electrum.GetTransactionResult, history []*electrum.GetMempoolResult, err error) {
	@AuthLayout("sat.watch - Address") {
		<div class="my-8">
			<div class="flex flex-row ">
				<h2 class="text-4xl font-bold text-gray-900 dark:text-white">
					Address
				</h2>
			</div>
			<p class="mt-2 md:text-lg md:font-semibold text-gray-400 break-words">
				if address.Name != nil {
					<span>{ *address.Name }</span>
				}
				<span class="font-mono block">{ address.Address }</span>
			</p>
			<a href={ templ.URL(fmt.Sprintf("https://mempool.space/address/%s", address.Address)) } target="_blank" rel="noopener noreferrer" class="inline-flex items-center font-medium text-blue-600 dark:text-blue-500 hover:underline">
				View on mempool.space
				<svg class="ms-2 w-[18px] h-[18px] text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
					<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 14v4.833A1.166 1.166 0 0 1 16.833 20H5.167A1.167 1.167 0 0 1 4 18.833V7.167A1.166 1.166 0 0 1 5.167 6h4.618m4.447-2H20v5.768m-7.889 2.121 7.778-7.778"></path>
				</svg>
			</a>
		</div>
		<div class="flex flex-col md:flex-row gap-4 justify-between">
			<div class="md:max-w-md max-w-sm w-full">
				<div class="p-6 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700">
					<h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">Summary</h5>
					<div class="relative overflow-x-auto">
						<table class="w-full md:text-base text-base text-left rtl:text-right text-gray-500 dark:text-gray-400">
							<tbody>
								<tr class="bg-white dark:bg-gray-800">
									<th scope="row" class="font-medium text-gray-900 whitespace-nowrap dark:text-white">
										Status
									</th>
									<td class="px-6 py-1">
										<span class="inline-flex items-center bg-green-100 text-green-800 text-xs font-medium px-2.5 py-0.5 rounded-full dark:bg-green-900 dark:text-green-300">
											<span class="w-2 h-2 me-1 bg-green-500 rounded-full"></span>
											Monitoring
										</span>
									</td>
								</tr>
								<tr class="bg-white dark:bg-gray-800">
									<th scope="row" class="font-medium text-gray-900 whitespace-nowrap dark:text-white">
										Confirmed balance
									</th>
									<td class="px-6 py-1">
										{ fmt.Sprintf("%.0f", balances.Confirmed) } sats
									</td>
								</tr>
								<tr class="bg-white dark:bg-gray-800">
									<th scope="row" class="font-medium text-gray-900 whitespace-nowrap dark:text-white">
										Unconfirmed balance
									</th>
									<td class="px-6 py-1">
										{ fmt.Sprintf("%.0f", balances.Unconfirmed) } sats
									</td>
								</tr>
								<tr class="bg-white dark:bg-gray-800">
									<th scope="row" class="font-medium text-gray-900 whitespace-nowrap dark:text-white">
										Confirmed UTXOs
									</th>
									<td class="px-6 py-1">
										{ fmt.Sprintf("%d", getConfirmedUTXOs(unspent)) }
									</td>
								</tr>
								<tr class="bg-white dark:bg-gray-800">
									<th scope="row" class="font-medium text-gray-900 whitespace-nowrap dark:text-white">
										Unconfirmed UTXOs
									</th>
									<td class="px-6 py-1">
										{ fmt.Sprintf("%d", len(unspent) - getConfirmedUTXOs(unspent)) }
									</td>
								</tr>
							</tbody>
						</table>
					</div>
					<div class="mt-4">
						<a data-modal-target="default-modal" data-modal-toggle="default-modal" class="cursor-pointer font-medium text-blue-600 underline dark:text-blue-500 hover:no-underline">
							Disable monitoring
						</a>
					</div>
				</div>
			</div>
			<div class="w-full">
				<div class="p-6 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700">
					<a href="#">
						<h5 class="mb-4 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">History</h5>
					</a>
					if len(txHistory) == 0 {
						<div class="flex space-between">
							<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-yellow-300"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M16 18a2 2 0 0 1 2 2a2 2 0 0 1 2 -2a2 2 0 0 1 -2 -2a2 2 0 0 1 -2 2zm0 -12a2 2 0 0 1 2 2a2 2 0 0 1 2 -2a2 2 0 0 1 -2 -2a2 2 0 0 1 -2 2zm-7 12a6 6 0 0 1 6 -6a6 6 0 0 1 -6 -6a6 6 0 0 1 -6 6a6 6 0 0 1 6 6z"></path></svg>
							<p class="text-gray-300 mx-2">No transaction history</p>
							<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-yellow-300"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M16 18a2 2 0 0 1 2 2a2 2 0 0 1 2 -2a2 2 0 0 1 -2 -2a2 2 0 0 1 -2 2zm0 -12a2 2 0 0 1 2 2a2 2 0 0 1 2 -2a2 2 0 0 1 -2 -2a2 2 0 0 1 -2 2zm-7 12a6 6 0 0 1 6 -6a6 6 0 0 1 -6 -6a6 6 0 0 1 -6 6a6 6 0 0 1 6 6z"></path></svg>
						</div>
					} else {
						<ol class="relative border-s border-gray-200 dark:border-gray-700">
							for i, result := range txHistory {
								<li class="mb-10 ms-6">
									<span class="absolute flex items-center justify-center w-6 h-6 rounded-full -start-3 ring-8 ring-white dark:ring-gray-800 dark:bg-blue-900">
										<svg class="w-2.5 h-2.5 text-blue-800 dark:text-blue-300" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
											<path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z"></path>
										</svg>
									</span>
									<h3 class="flex items-center mb-1 text-lg font-semibold text-gray-900 dark:text-white">{ getBlockString(history[i]) }</h3>
									<time class="block mb-2 text-base font-normal leading-none text-gray-400 dark:text-gray-500">{ humanTime(result.Time) }</time>
									<a href={ templ.URL(fmt.Sprintf("https://mempool.space/tx/%s", result.Txid)) } target="_blank" rel="noopener noreferrer" class="inline-flex items-center text-base hover:underline text-gray-400">
										View on mempool.space
										<svg class="w-[14px] h-[14px] text-gray-400 ms-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
											<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 14v4.833A1.166 1.166 0 0 1 16.833 20H5.167A1.167 1.167 0 0 1 4 18.833V7.167A1.166 1.166 0 0 1 5.167 6h4.618m4.447-2H20v5.768m-7.889 2.121 7.778-7.778"></path>
										</svg>
									</a>
								</li>
							}
						</ol>
					}
				</div>
			</div>
		</div>
		<!-- Main modal -->
		<div id="default-modal" tabindex="-1" aria-hidden="true" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
			<div class="relative p-4 w-full max-w-2xl max-h-full">
				<!-- Modal content -->
				<div class="relative bg-white rounded-lg shadow-sm dark:bg-gray-700">
					<!-- Modal header -->
					<div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600 border-gray-200">
						<h3 class="text-xl font-semibold text-gray-900 dark:text-white">
							Disable monitoring
						</h3>
						<button type="button" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-base w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-hide="default-modal">
							<svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
								<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
							</svg>
							<span class="sr-only">Close modal</span>
						</button>
					</div>
					<!-- Modal body -->
					<div class="p-4 md:p-5 space-y-4">
						<p class="text-base leading-relaxed text-gray-500 dark:text-gray-400">
							Are you sure you wish to disable monitoring? This will immediately remove the address from your account and you will no longer recieve notifications.
						</p>
					</div>
					<!-- Modal footer -->
					<div class="flex items-center p-4 md:p-5 border-t border-gray-200 rounded-b dark:border-gray-600">
						<form action={ templ.URL(fmt.Sprintf("/app/addresses/%s/delete", address.ID)) } method="POST">
							<button data-modal-hide="default-modal" type="submit" class="focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-base px-5 py-2.5 me-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900">Yes, disable monitoring</button>
							<button data-modal-hide="default-modal" type="button" class="py-2.5 px-5 ms-3 text-base font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700">No, cancel</button>
						</form>
					</div>
				</div>
			</div>
		</div>
	}
}
