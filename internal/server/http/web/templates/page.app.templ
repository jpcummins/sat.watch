package templates

import (
	"fmt"
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"github.com/jpcummins/satwatch/internal/api"
	"github.com/jpcummins/satwatch/internal/configs"
)

func getAmountMonitored(addresses []api.Address) string {
	amount := 0
	for _, address := range addresses {
		for _, utxo := range address.UTXOs {
			amount = amount + int(utxo.Value)
		}
	}

	p := message.NewPrinter(language.English)
	return p.Sprintf("%d", amount)
}

func hasVerifiedEmail(emails []api.Email) bool {
	for _, email := range emails {
		if email.IsVerified == true {
			return true
		}
	}
	return false
}


templ PageApp(xpubs []api.Xpub, addresses []api.Address, webhooks []api.Webhook, emails []api.Email, config *configs.Config) {
	@AuthLayout("sat.watch - Home", "addressPoll") {
		if len(webhooks) == 0 && len(emails) == 0 {
			@NoNotificationsWarning()
		} else if hasVerifiedEmail(emails) == false {
			@UnverifiedEmailWarning(emails)
		}
		<div class="flex items-baseline justify-between mb-4">
			<div class="flex flex-col">
				<h2 class="mt-8 text-xl font-semibold leading-none text-gray-900 md:text-2xl dark:text-white">Monitoring { fmt.Sprintf("%d", len(addresses)) } addresses</h2>
				<p class="mt-1 text-sm text-gray-500 dark:text-gray-400">{ getAmountMonitored(addresses) } sats</p>
			</div>
			<div>
				<a href="/app/addresses/create" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800">Add Address</a>
			</div>
		</div>
		@ComponentAddressTable(addresses, xpubs)
	}
}
