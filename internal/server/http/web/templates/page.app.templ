package templates

import (
	"fmt"
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"github.com/jpcummins/satwatch/internal/api"
	"github.com/jpcummins/satwatch/internal/configs"
)

func getAmountMonitored(addresses []api.Address) string {
	amount := 0
	for _, address := range addresses {
		for _, utxo := range address.UTXOs {
			amount = amount + int(utxo.Value)
		}
	}

	p := message.NewPrinter(language.English)
	return p.Sprintf("%d", amount)
}

func hasVerifiedEmail(emails []api.Email) bool {
	for _, email := range emails {
		if email.IsVerified == true {
			return true
		}
	}
	return false
}


templ showNotificaitonWarning() {
	<div id="alert-smtp" class="flex items-center p-4 my-4 text-yellow-800 rounded-lg bg-yellow-50 dark:bg-gray-800 dark:text-yellow-300" role="alert">
		<svg class="flex-shrink-0 w-4 h-4" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
			<path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z"></path>
		</svg>
		<span class="sr-only">Info</span>
		<div class="ms-3 text-sm font-medium">
			Please add an email address or webhook to recieve notifications. <a href={ templ.URL("/app/settings") } class="font-semibold underline hover:no-underline">Configure now</a>
		</div>
		<button type="button" class="ms-auto -mx-1.5 -my-1.5 bg-yellow-50 text-yellow-500 rounded-lg focus:ring-2 focus:ring-yellow-400 p-1.5 hover:bg-yellow-200 inline-flex items-center justify-center h-8 w-8 dark:bg-gray-800 dark:text-yellow-300 dark:hover:bg-gray-700" data-dismiss-target="#alert-smtp" aria-label="Close">
			<span class="sr-only">Close</span>
			<svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
				<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
			</svg>
		</button>
	</div>
}

templ PageApp(xpubs []api.Xpub, addresses []api.Address, webhooks []api.Webhook, emails []api.Email, config *configs.Config) {
	@AuthLayout("sat.watch - Home", "addressPoll") {
		if len(webhooks) == 0 && len(emails) == 0 {
			@showNotificaitonWarning()
		} else if hasVerifiedEmail(emails) == false {
			@UnverifiedEmailWarning(emails)
		}
		<div class="flex items-baseline justify-between mb-4">
			<div class="flex flex-col">
				<h2 class="mt-8 text-xl font-semibold leading-none text-gray-900 md:text-2xl dark:text-white">Monitoring { fmt.Sprintf("%d", len(addresses)) } addresses</h2>
				<p class="mt-1 text-sm text-gray-500 dark:text-gray-400">{ getAmountMonitored(addresses) } sats</p>
			</div>
			<div>
				<a href="/app/addresses/create" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800">Add Address</a>
			</div>
		</div>
		@ComponentAddressTable(addresses, xpubs)
	}
}
