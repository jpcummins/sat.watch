package templates

import (
	"strconv"
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"github.com/jpcummins/satwatch/internal/api"
	"fmt"
)

func getAddressUrl(address api.Address) string {
	return "/app/addresses/" + address.ID
}

func getShortenedAddress(address api.Address) string {
	return address.Address[0:4] + "…" + address.Address[len(address.Address)-4:]
}

func getUtxoSum(address api.Address) string {
	var amount uint64 = 0
	for _, utxo := range address.UTXOs {
		amount = amount + utxo.Value
	}
	p := message.NewPrinter(language.English)
	return p.Sprintf("%d", amount)
}

func getXpubName(id string, xpubs []api.Xpub) string {
	for _, xpub := range xpubs {
		if xpub.ID == id {
			return getShortenedXpub(xpub.Pubkey)
		}
	}
	return ""
}

func getShortenedXpub(xpub string) string {
	return xpub[0:6] + "…" + xpub[len(xpub)-3:]
}

func getXpubDisplayName(id string, xpubs []api.Xpub) *string {
	for _, xpub := range xpubs {
		if xpub.ID == id {
			return xpub.Name
		}
	}
	return nil
}

templ ComponentAddressTable(addresses []api.Address, xpubs []api.Xpub) {
	<div x-data="addressPoll" class="relative overflow-x-auto shadow-md sm:rounded-lg">
		<table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
			<thead class="text-xs text-gray-700 uppercase bg-gray-800 dark:text-gray-400">
				<tr>
					<th scope="col" class="px-3 md:px-6 py-3">
						Address
					</th>
					<th scope="col" class="px-3 md:px-6 py-3 hidden md:table-cell">
						<div class="flex items-center">
							UTXOs
						</div>
					</th>
					<th scope="col" class="px-3 md:px-6 py-3">
						<div class="flex items-center">
							Balance
						</div>
					</th>
				</tr>
			</thead>
			<tbody class="">
				for _, address := range addresses {
					<tr class="bg-white border-b dark:bg-gray-800/75 dark:border-gray-700" data-address-id={address.ID}>
						<th scope="row" class="px-3 md:px-6 py-4 whitespace-nowrap flex items-start">
							<span class="hidden md:flex w-3 h-3 me-3 bg-green-500 rounded-full self-start mt-1"></span>
							<div>
								<div>
									if address.XpubID != nil {
										<div class="flex flex-col md:flex-row items-baseline gap-2">
											<div class="flex flex-col min-w-0">
												<span class="font-medium text-blue-600 font-mono tracking-wider dark:text-blue-500 whitespace-nowrap">
													<a class="font-medium text-blue-600 dark:text-blue-500 hover:underline" href={ templ.URL(fmt.Sprintf("/app/xpubs/%s", *address.XpubID)) }>{ getXpubName(*address.XpubID, xpubs) }</a>
													<span class="text-gray-300 ml-2">
														if address.IsExternal {
															m/0/{ fmt.Sprintf("%d", address.AddressIndex) }
														} else {
															m/1/{ fmt.Sprintf("%d", address.AddressIndex) }
														}
													</span>
												</span>
												if getXpubDisplayName(*address.XpubID, xpubs) != nil {
													<p class="font-normal truncate text-gray-400">{ *getXpubDisplayName(*address.XpubID, xpubs) }</p>
												}
											</div>
											<div class="flex items-center mx-2 text-base text-gray-900 dark:text-white select-none">›</div>
											<div class="flex flex-col min-w-0">
												<a class="font-medium text-blue-600 font-mono tracking-wider dark:text-blue-500 hover:underline whitespace-nowrap overflow-hidden text-ellipsis" href={ templ.URL(getAddressUrl(address)) }>
													<span class="hover:underline hidden md:inline-block">{ address.Address }</span>
													<span class="hover:underline md:hidden">{ getShortenedAddress(address) }</span>
												</a>
												if address.Name != nil {
													<p class="font-normal truncate text-gray-400">{ *address.Name }</p>
												}
											</div>
										</div>
									} else {
										<span class="font-medium text-blue-600 font-mono tracking-wider dark:text-blue-500">
											<a class="" href={ templ.URL(getAddressUrl(address)) }>
												<span class="hover:underline hidden md:inline-block">{ address.Address }</span>
												<span class="hover:underline md:hidden">{ getShortenedAddress(address) }</span>
											</a>
										</span>
										if address.Name != nil {
											<p class="font-normal truncate text-gray-400">{ *address.Name }</p>
										}
									}
								</div>
							</div>
						</th>
						if address.UTXOs == nil {
							<td class="hidden md:table-cell px-3 md:px-6 py-4 align-top utxo-count-cell" data-pending="true">
								<div role="status">
									<svg aria-hidden="true" class="inline w-4 h-4 mr-2 text-gray-200 animate-spin fill-blue-600" viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
										<path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z" fill="currentColor"/>
										<path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z" fill="currentFill"/>
									</svg>
									<span class="sr-only">Loading...</span>
								</div>
							</td>
							<td class="px-3 md:px-6 py-4 align-top balance-cell" data-pending="true">
								<div role="status">
									<svg aria-hidden="true" class="inline w-4 h-4 mr-2 text-gray-200 animate-spin fill-blue-600" viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
										<path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z" fill="currentColor"/>
										<path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z" fill="currentFill"/>
									</svg>
									<span class="sr-only">Loading...</span>
								</div>
							</td>
						} else {
							<td class="hidden md:table-cell px-3 md:px-6 py-4 align-top utxo-count-cell" data-pending="false">
								{ strconv.Itoa(len(address.UTXOs)) }
							</td>
							<td class="px-3 md:px-6 py-4 align-top balance-cell" data-pending="false">
								{ getUtxoSum(address) }
							</td>
						}
					</tr>
				}
				if len(addresses) == 0 {
					for _ = range 4 {
						<tr class="bg-white border-b dark:bg-gray-800/75 dark:border-gray-800">
							<th scope="row" class="px-3">
								<div class="h-2 bg-gray-200 rounded-full dark:bg-gray-800 max-w-[360px] "></div>
							</th>
							<td class="hidden md:table-cell px-3 md:px-6 py-4">
								<div class="h-2 bg-gray-200 rounded-full dark:bg-gray-800 max-w-[360px] "></div>
							</td>
							<td class="px-3 md:px-6 py-4">
								<div class="h-2 bg-gray-200 rounded-full dark:bg-gray-800 max-w-[360px] "></div>
							</td>
						</tr>
					}
				}
			</tbody>
		</table>
		if len(addresses) == 0 {
			<div class="absolute inset-0 flex items-center justify-center">
				<div class="">
					<p class="mb-2 font-normal text-gray-300 dark:text-gray-300">Please <a href="/app/addresses/create" class="font-medium underline text-primary-600 dark:text-primary-500 hover:underline no-underline">add an address</a> to get started</p>
				</div>
			</div>
		}
	</div>
}
